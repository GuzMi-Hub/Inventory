@using Entities
@using Business 
@inject B_Product bProduct
@inject B_Category bCategory

<hr />
<select class="form-control" @onchange="CategoryChanged">
    <option value="">--Please choose an option--</option>
    @foreach (var category in categories)
    {
        <option value="@category.CategoryId">@category.CategoryName</option>
    }
</select>
<hr />

<table class="table">
    <thead>
        <tr>
            <th>Referencia</th>
            <th>Nombre producto</th>
            <th>Categoria</th>
            <th>Editar</th>
        </tr>
    </thead>
    <tbody>
        @foreach(var product in tempProducts)
            {
                <tr>
                    <td>@product.ProductId</td>
                    <td>@product.ProductName</td>
                    <td>@product.Category.CategoryName</td>
                    <td><a href="product/edit/@product.ProductId">Editar</a></td>
                </tr>
            }
    </tbody>
</table>


@code {
    List<ProductEntity> products = new List<ProductEntity>();
    List<ProductEntity> tempProducts = new List<ProductEntity>();
    List<CategoryEntity> categories = new List<CategoryEntity>();

    protected override async Task OnInitializedAsync()
    {
        products = bProduct.ItemList();
        tempProducts = products;
        categories = bCategory.ItemList();
        foreach (var product in products)
        {
            if (product.CategoryId != null)
            {
                product.Category = bCategory.ItemList().FirstOrDefault(x => x.CategoryId == product.CategoryId);
            }
            else
            {
                product.Category.CategoryId = "N/A";
                product.Category.CategoryName = "No Definido";
            }

        }
    }

    private void CategoryChanged(ChangeEventArgs e)
    {
        tempProducts= products.Where(c => c.CategoryId == e.Value.ToString()).ToList();
    }
}
